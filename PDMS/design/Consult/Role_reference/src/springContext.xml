<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN 2.0//EN" "http://www.springframework.org/dtd/spring-beans-2.0.dtd">
<beans>
	<bean id="baseConfig" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:init.properties</value>
		</property>
	</bean>
	<!--  
	<bean id="dataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close" dependency-check="none">
		<property name="driverClass">
			<value>${datasource.driverClassName}</value>
		</property>
		<property name="jdbcUrl">
			<value>${datasource.url}</value>
		</property>
		<property name="user">
			<value>${datasource.username}</value>
		</property>
		<property name="password">
			<value>${datasource.password}</value>
		</property>
		<property name="acquireIncrement">
			<value>${c3p0.acquireIncrement}</value>
		</property>
		<property name="initialPoolSize">
			<value>${c3p0.initialPoolSize}</value>
		</property>
		<property name="minPoolSize">
			<value>${c3p0.minPoolSize}</value>
		</property>
		<property name="maxPoolSize">
			<value>${c3p0.maxPoolSize}</value>
		</property>
		<property name="maxIdleTime">
			<value>${c3p0.maxIdleTime}</value>
		</property>
		<property name="idleConnectionTestPeriod">
			<value>${c3p0.idleConnectionTestPeriod}</value>
		</property>
		<property name="maxStatements">
			<value>${c3p0.maxStatements}</value>
		</property>
		<property name="numHelperThreads">
			<value>${c3p0.numHelperThreads}</value>
		</property>
	</bean>
	-->
	
	
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<!--  
		<property name="dataSource">
			<ref local="dataSource" />
		</property>
		-->
		<!-- 这里使用hibernate文件配置，保证与JBPM的相关函数使用相同的连接池 -->
		<property name="configLocation" value="classpath:hibernate.cfg.xml"></property>
		
		
		
		<property name="mappingResources">
			<list>
				<value>com/m2/entity/mapping/M2User.hbm.xml</value>
				<value>com/m2/entity/mapping/M2Role.hbm.xml</value>
				<value>com/m2/entity/mapping/M2Group.hbm.xml</value>
				<value>com/m2/entity/mapping/M2Org.hbm.xml</value>
				<value>com/m2/entity/mapping/M2Function.hbm.xml</value>
				<value>com/m2/entity/mapping/M2FuncTree.hbm.xml</value>				
			</list>
		</property>		
		 
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					${hibernate.dialect}
				</prop>
				<prop key="hibernate.show_sql">
					${hibernate.show_sql}
				</prop>
				<prop key="hibernate.jdbc.fetch_size">
					${hibernate.jdbc.fetch_size}
				</prop>
				<prop key="hibernate.jdbc.batch_size">
					${hibernate.jdbc.batch_size}
				</prop>
			</props>
		</property>		
	</bean>
	
	<bean id="m2TransactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>	
	
	<bean id="transactionProxy" abstract="true"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager">
			<ref bean="m2TransactionManager" />
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="create*">
					PROPAGATION_REQUIRED,-com.m2.exception.M2Exception
				</prop>
				<prop key="save*">
					PROPAGATION_REQUIRED,-com.m2.exception.M2Exception
				</prop>
				<prop key="add*">
					PROPAGATION_REQUIRED,-com.m2.exception.M2Exception
				</prop>				<prop key="remove*">
					PROPAGATION_REQUIRED,-com.m2.exception.M2Exception
				</prop>
				<prop key="update*">
					PROPAGATION_REQUIRED,-com.m2.exception.M2Exception
				</prop>
				<prop key="del*">
					PROPAGATION_REQUIRED,-com.m2.exception.M2Exception
				</prop>
				<prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>
	</bean>	
	
	<!--////////////////////////// service -->
	
	<bean id="pagination" parent="transactionProxy"  scope="prototype">    <!--分页服务是有状态bean,需要设置为prototype-->
		<property name="target">
			<ref bean="paginationServiceTarget" />
		</property>
	</bean>
	
	<bean id="orgService" parent="transactionProxy"> 
		<property name="target">
			<ref bean="orgServiceTarget" />
		</property>
	</bean>	
	
	<bean id="userService" parent="transactionProxy"> 
		<property name="target">
			<ref bean="userServiceTarget" />
		</property>
	</bean>	
	
	<bean id="roleService" parent="transactionProxy"> 
		<property name="target">
			<ref bean="roleServiceTarget" />
		</property>

	</bean>	
	
	<bean id="groupService" parent="transactionProxy"> 
		<property name="target">
			<ref bean="groupServiceTarget" />
		</property>
	</bean>				
	
	<bean id="permissionService" parent="transactionProxy"> 
		<property name="target">
			<ref bean="permissionServiceTarget" />
		</property>
	</bean>		
	
	<bean id="sysFunctionService" parent="transactionProxy"> 
		<property name="target">
			<ref bean="sysFunctionServiceTarget" />
		</property>

	</bean>		
		
	
	<!--////////////////////////////////// service target -->
	
	<bean id="paginationServiceTarget" scope="prototype" class="com.m2.service.impl.PaginationServiceImpl">
		<property name="baseDAO">
			<ref local="baseDAO" />
		</property>
	</bean>	
	
	<bean id="orgServiceTarget"  class="com.m2.service.impl.OrgServiceImpl">
		<property name="orgDAO">
			<ref local="orgDAO" />
		</property>
	</bean>		
	
	<bean id="userServiceTarget"  class="com.m2.service.impl.UserServiceImpl">
		<property name="userDAO">
			<ref local="userDAO" />
		</property>
	</bean>			
	
	<bean id="roleServiceTarget"  class="com.m2.service.impl.RoleServiceImpl">
		<property name="roleDAO">
			<ref local="roleDAO" />
		</property>
	</bean>			
	
	<bean id="groupServiceTarget"  class="com.m2.service.impl.GroupServiceImpl">
		<property name="groupDAO">
			<ref local="groupDAO" />
		</property>
	</bean>		
	
	<bean id="permissionServiceTarget"  class="com.m2.service.impl.PermissionServiceImpl">
		<property name="permissionDAO">
			<ref local="permissionDAO" />
		</property>
	</bean>		
	
	<bean id="sysFunctionServiceTarget"  class="com.m2.service.impl.SysFunctionServiceImpl">
		<property name="funcTreeDAO">
			<ref local="funcTreeDAO" />
		</property>
		
				
		<property name="roleService">
			<ref bean="roleService" />
		</property>
		
	</bean>			
		
	<!--//////////////////////////////////// dao -->
	
	<bean id="baseDAO" class="com.m2.dao.hibernate.BaseDAOHibernate">
	    <property name="sessionFactory">
	        <ref local="sessionFactory" />
	    </property>	
	</bean>	
	
	<bean id="orgDAO" class="com.m2.dao.hibernate.OrgDAOHibernate">
	    <property name="sessionFactory">
	        <ref local="sessionFactory" />
	    </property>	
	</bean>	
	
	<bean id="userDAO" class="com.m2.dao.hibernate.UserDAOHibernate">
	    <property name="sessionFactory">
	        <ref local="sessionFactory" />
	    </property>	
	</bean>		
	
	<bean id="roleDAO" class="com.m2.dao.hibernate.RoleDAOHibernate">
	    <property name="sessionFactory">
	        <ref local="sessionFactory" />
	    </property>	
	</bean>		
	
	<bean id="groupDAO" class="com.m2.dao.hibernate.GroupDAOHibernate">
	    <property name="sessionFactory">
	        <ref local="sessionFactory" />
	    </property>	
	</bean>		
	
	<bean id="permissionDAO" class="com.m2.dao.hibernate.PermissionDAOHibernate">
	    <property name="sessionFactory">
	        <ref local="sessionFactory" />
	    </property>	
	</bean>			
	<bean id="funcTreeDAO" class="com.m2.dao.hibernate.FuncTreeDAOHibernate">
	    <property name="sessionFactory">
	        <ref local="sessionFactory" />
	    </property>	
	</bean>			
				 
</beans>