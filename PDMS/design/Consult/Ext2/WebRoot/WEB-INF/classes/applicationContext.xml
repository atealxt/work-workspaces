<?xml version="1.0" encoding="UTF-8"?> 
<beans default-autowire="byName" 
       xmlns="http://www.springframework.org/schema/beans" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xmlns:jee="http://www.springframework.org/schema/jee" 
       xmlns:aop="http://www.springframework.org/schema/aop" 
       xmlns:tx="http://www.springframework.org/schema/tx" 
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd 
           http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd 
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd 
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd"> 

	<!-- database.properties -->
	<bean id="propertyConfig" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:database.properties</value>
			</list> 
		</property>
	</bean> 
	<!-- dataSource -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${dataSource.driverClassName}" />
		<property name="url" value="${dataSource.url}" />
		<property name="username" value="${dataSource.username}" />
		<property name="password" value="${dataSource.password}" />
	</bean>
	
	<!-- dataSource -->
	<!-- 
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
	    <property name="driverClassName">
	      <value>oracle.jdbc.driver.OracleDriver</value>
	    </property>
	    <property name="url">
	      <value>jdbc:oracle:thin:@132.159.173.168:1521:EOS145</value>
	    </property> 
	    <property name="username">
	      <value>dc</value>
	    </property>
	    <property name="password">
	      <value>dc</value>
	    </property>
  	</bean>
  	 -->
  	
  	<!-- transactionManager -->
  	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    	<property name="dataSource">
    	  <ref local="dataSource"/>
    	</property>
  	</bean>
  	
  	<!-- single transactionManager -->
  	<!-- 
  	<bean id="userDAOProxy" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
	    <property name="transactionManager">
	      <ref bean="transactionManager" />
	    </property>
	    <property name="target">
	      <ref local="userDAO" />
	    </property>
	    <property name="transactionAttributes">
	      <props>
	        <prop key="insert*">PROPAGATION_REQUIRED</prop>
	        <prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>
	      </props>
	    </property>
  	</bean>
  	-->
  	 
	<!-- transactionManager Advice --> 
    <tx:advice id="txAdvice" transaction-manager="transactionManager"> 
        <tx:attributes> 
            <tx:method name="create*" rollback-for="Exception"/> 
            <tx:method name="update*" rollback-for="Exception"/> 
            <tx:method name="delete*" rollback-for="Exception"/> 
            <tx:method name="*" read-only="true" rollback-for="Exception"/> 
        </tx:attributes> 
    </tx:advice> 
    
    <!-- transactionManager config --> 
    <aop:config> 
        <aop:pointcut id="serviceOperation" expression="execution(* com.zhu.system.*.service.*(..))"/> 
        <aop:advisor pointcut-ref="serviceOperation" advice-ref="txAdvice"/> 
    </aop:config>
  	
  	<!-- ibatis config -->
  	<bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
        <property name="configLocation">
            <!-- <value>classpath:com\test\conf\sql-map-config.xml</value>  -->
            <value>classpath:sql-map-config.xml</value>
        </property>
        <property name="dataSource">
            <ref bean="dataSource"/>
        </property>    
    </bean>

	<!-- 系统用户 manage -->
	<bean id="userDAO" class="com.test.system.user.ibatis.UserDAOImpl">
		<property name="dataSource">
			<ref local="dataSource" />
		</property>
		<property name="sqlMapClient">
			<ref local="sqlMapClient" />
		</property>
	</bean>
	<bean id="userService" class="com.test.system.user.service.UserServiceImpl">
		<property name="userDAO" ref="userDAO"/>
	</bean>
	<bean id="userAction" class="com.test.system.user.struts.UserAction" scope="prototype">
		<property name="userService" ref="userService"/>
	</bean>

	<!-- 资源 manage -->
	<bean id="resourceDAO" class="com.test.system.resource.ibatis.ResourceDAOImpl">
		<property name="dataSource">
			<ref local="dataSource" />
		</property>
		<property name="sqlMapClient">
			<ref local="sqlMapClient" />
		</property>
	</bean>
	<bean id="resourceService" class="com.test.system.resource.service.ResourceServiceImpl">
		<property name="resourceDAO" ref="resourceDAO"/>
	</bean>
	<bean id="resourceAction" class="com.test.system.resource.struts.ResourceAction" scope="prototype">
		<property name="resourceService" ref="resourceService"/>
	</bean>

	<!-- 角色 manage -->
	<bean id="roleDAO" class="com.test.system.role.ibatis.RoleDAOImpl">
		<property name="dataSource">
			<ref local="dataSource" />
		</property>
		<property name="sqlMapClient">
			<ref local="sqlMapClient" />
		</property>
	</bean>
	<bean id="roleService" class="com.test.system.role.service.RoleServiceImpl">
		<property name="roleDAO" ref="roleDAO"/>
	</bean>
	<bean id="roleAction" class="com.test.system.role.struts.RoleAction" scope="prototype">
		<property name="roleService" ref="roleService"/>
		<property name="roleresourceService" ref="roleresourceService"/>
	</bean>

	<!-- 角色资源 manage -->
	<bean id="roleresourceDAO" class="com.test.system.role_resource.ibatis.RoleResourceDAOImpl">
		<property name="dataSource">
			<ref local="dataSource" />
		</property>
		<property name="sqlMapClient">
			<ref local="sqlMapClient" />
		</property>
	</bean>
	<bean id="roleresourceService" class="com.test.system.role_resource.service.RoleResourceServiceImpl">
		<property name="roleresourceDAO" ref="roleresourceDAO"/>
	</bean>
	<bean id="roleresourceAction" class="com.test.system.role_resource.struts.RoleResourceAction" scope="prototype">
		<property name="roleresourceService" ref="roleresourceService"/>
		<property name="resourceService" ref="resourceService"/>
		<property name="roleService" ref="roleService"/>
	</bean>

	<!-- 组织机构 manage -->
	<bean id="groupDAO" class="com.test.system.group.ibatis.GroupDAOImpl">
		<property name="dataSource">
			<ref local="dataSource" />
		</property>
		<property name="sqlMapClient">
			<ref local="sqlMapClient" />
		</property>
	</bean>
	<bean id="groupService" class="com.test.system.group.service.GroupServiceImpl">
		<property name="groupDAO" ref="groupDAO"/>
	</bean>
	<bean id="groupAction" class="com.test.system.group.struts.GroupAction" scope="prototype">
		<property name="groupService" ref="groupService"/>
	</bean>

	<!-- ${object_desc} manage -->
	<!--
	${object_conf} 
    -->
  	 
	
</beans>









