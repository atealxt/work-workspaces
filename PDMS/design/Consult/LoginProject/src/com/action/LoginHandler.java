/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.dao.UserDao;
import com.form.LoginForm;
import com.po.User;

/** 
 * MyEclipse Struts
 * Creation date: 05-16-2007
 * 
 * XDoclet definition:
 * @struts.action path="/login" name="loginForm" scope="request" validate="true"
 * @struts.action-forward name="success" path="/success.jsp"
 * @struts.action-forward name="failure" path="/login.jsp"
 */
public class LoginHandler extends Action {
	
	private UserDao myUserDao;
	/*
	 * Generated Methods
	 */

	
	public UserDao getMyUserDao() {
		return myUserDao;
	}


	public void setMyUserDao(UserDao myUserDao) {
		this.myUserDao = myUserDao;
	}


	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		LoginForm loginForm = (LoginForm) form;// TODO Auto-generated method stub
		//TODO
		//构建User数据对象
		User user = new User();
		user.setUserName(loginForm.getUsername());
		user.setPassword(loginForm.getPass());
		//那么Struts的action如何获取Spring容器中的UserDao对象呢，只有一条路可走了，就是让
		//Spring注入给你，如何注入呢？
		//这就是Spring中用的最多的属性注入方式
		//别急，继续配置Spring...
		
		//从Spring容器中获取UserDao托管对象
		boolean result = this.myUserDao.loginCheck(user);
		//调用UserDao中得方法进行数据校验
		if(result){
			return mapping.findForward("success");
		}else{
		//根据返回值决定页面转向,true－跳转到成功页面；false－跳转到登陆页面进行重新登陆
			return mapping.findForward("failure");
		
		}
		//至此，所有程序的开发已经结束，想想看，还有什么东西要做，哦，对了,数据库还没有，表还没有，跟别提表数据了
		//还愣什么，快建啊
		//ok,我已经搞定了，最后就是项目部署运行、调试了哈！
		//初战告捷，接下来还有更加深入的学习内容，敬请期待...
	}
}