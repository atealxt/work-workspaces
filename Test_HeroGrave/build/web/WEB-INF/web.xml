<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

    <description>version 0.1</description>
    <display-name>BBS: Hero's Grave</display-name>
    <session-config>
        <session-timeout>
            30
        </session-timeout>
    </session-config>
    <welcome-file-list>
        <welcome-file>welcome.jsp</welcome-file>
    </welcome-file-list>
    
    <filter> 
        <filter-name>struts2</filter-name> 
        <filter-class> 
        org.apache.struts2.dispatcher.FilterDispatcher 
        </filter-class> 
    </filter>    
    <filter-mapping>
        <filter-name>struts2</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    
    
    
    <!--
      - Location of the XML file that defines the root application context.
      - Applied by ContextLoaderServlet.
      -->
    <!--
    <context-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>/WEB-INF/classes/com/herograve/test/springconfig.xml</param-value>
    </context-param>    
    -->
    <!--
      - Loads the root application context of this web app at startup,
      - by default from "/WEB-INF/applicationContext.xml".
            - Note that you need to fall back to Spring's ContextLoaderServlet for
            - J2EE servers that do not follow the Servlet 2.4 initialization order.
            -
      - Use WebApplicationContextUtils.getWebApplicationContext(servletContext)
      - to access it anywhere in the web application, outside of the framework.
      -
      - The root context is the parent of all servlet-specific contexts.
      - This means that its beans are automatically available in these child contexts,
      - both for getBean(name) calls and (external) bean references.
      -->
    <!--
    <listener>
            <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener> 
    -->
    
    
</web-app>









